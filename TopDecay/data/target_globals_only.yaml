selection:
   ### use `&`, `|`, `~` for logical operations on numpy arrays
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
   #(genJet_pt>300) & (genJet_pt<2500) & (genJet_nConstituents>0) 
   (genJet_pt>500) & (genJet_SDmass>0) & (np.abs(dR_genJet_maxq1q2b)<0.6) & (genJet_SDsubjet1_mass>=0)
test_time_selection:
   ### selection to apply at test time (i.e., when running w/ --predict)
   #(genJet_pt>300) & (genJet_pt<2500) & (genJet_nConstituents>0)
   (genJet_pt>500) & (genJet_SDmass>0) & (np.abs(dR_genJet_maxq1q2b)<0.6) & (genJet_SDsubjet1_mass>=0)

new_variables:
   ### [format] name: formula
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
   ctWRe_lin: ctWRe_coeff[:,0]
   ctWRe_quad: ctWRe_coeff[:,1]

preprocess:
  ### method: [manual, auto] - whether to use manually specified parameters for variable standardization
  ### [note]: `[var]_mask` will not be transformed even if `method=auto`
  method: manual
  ### data_fraction: fraction of events to use when calculating the mean/scale for the standardization
  data_fraction: 

inputs:
   global_features:
      length: 1
      vars:
         - ctWRe_lin
         - ctWRe_quad

labels:
   ### type can be `simple`, `custom`
   ### [option 1] use `simple` for binary/multi-class classification, then `value` is a list of 0-1 labels
   ### [option 2] otherwise use `custom` to define the label, then `value` is a map
   # type: custom
   # value: 
      # target_mass: np.where(fj_isQCD, fj_genjet_sdmass, fj_eflow_mass) 
   type: custom
   value:
        ctWRe_coeffs: ctWRe_coeff

observers:
   # - 'p_C'
   # - genJet_pt
   # - genJet_eta
   # - genJet_phi
   # - genJet_nConstituents
   # - parton_top_pt

#weights:
   #### [option 1] use precomputed weights stored in the input files
   ## use_precomputed_weights: true
   ## weight_branches: [weight, class_weight]
   #### [option 2] compute weights on-the-fly using reweighting histograms
   #use_precomputed_weights: false
   #reweight_method: flat
   #reweight_vars:
   #   genJet_pt: [300, 500, 800, 10000] #251, 316, 398, 501, 630, 793, 997, 1255, 1579, 1987, 2500]
   #   genJet_eta: [-10., 10.]
   #reweight_classes: [
   #   label_quad_0, label_quad_1, label_quad_2, label_quad_3
   #   ]
   #class_weights: [
   #   1, 1, 1, 1
   #   ]
   #reweight_hists:

