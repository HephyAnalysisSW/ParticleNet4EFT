sbatch_args:
  --nodes: '1'
  --partition: g
  --gres: gpu:1
  --cpus-per-task: '4'
  --mem-per-gpu: 40G
  --qos: short
  --time: 08:00:00
  -D: /users/oskar.rothbacher/CMS/ParticleNet4EFT/


# these are the same for all scripts
train_options_const:
  --data-train:
    - '/scratch-cbe/users/robert.schoefbeck/HadronicSMEFT/postprocessed/gen/v6/tschRefPointNoWidthRW/tschRefPointNoWidthRW_[1-7]?.root'  
  --data-test:
    - '/scratch-cbe/users/robert.schoefbeck/HadronicSMEFT/postprocessed/gen/v6/tschRefPointNoWidthRW/tschRefPointNoWidthRW_[8-9]?.root' 
  # --data-config:
  #   - 'TopDecay/data/eflow_particles_delphes_globals_ctWRe_weighted.yaml'
  --network-config:
    - 'TopDecay/networks/ParticleNet/test_pnet.py'
  --regression-mode:
    - ''
  --optimizer:
    - ranger
  --lr-scheduler:
    - none
  --weighting:
    - ''
  --gpus:
    - 0
  --fetch-by-files:
    - ''
  --fetch-step:
    - 10
  --num-workers:
    - 3
  

# these vary by script   
train_options_var:

  # any occurence of 'auto' will be replaced by network options
  --model-prefix:
    - 'models/pre_train_global_fc_2/model'
    - 'models/auto/model'
    - 'models/auto/model'
    - 'models/auto/model'
    - 'models/auto/model'

  --data-config:
    - 'TopDecay/data/eflow_particles_delphes_globals_ctWRe_weighted.yaml'
    - 'TopDecay/data/eflow_particles_only_ctWRe_weighted.yaml'
    - 'TopDecay/data/eflow_particles_delphes_globals_ctWRe_weighted.yaml'
    - 'TopDecay/data/eflow_particles_only_ctWRe_weighted.yaml'
    - 'TopDecay/data/eflow_particles_delphes_globals_ctWRe_weighted.yaml'

  --start-lr:
    - 1e-5
    - 1e-4
    - 1e-4
    - 1e-4
    - 1e-4

  --num-epochs:
    - 400
    - 100
    - 100
    - 100
    - 100

  --batch-size:
    - 100
    - 100
    - 100
    - 100
    - 100

  --tensorboard:
    - runs/test_pre_train/pre_train_global_fc_2
    - runs/test_pre_train/auto
    - runs/test_pre_train/auto
    - runs/test_pre_train/auto
    - runs/test_pre_train/auto

network_options:

  conv_params:
    - '[(4, (8,8,8)), (8, (16, 16, 16))]'
    - '[(8, (32, 32, 32)), (8, (64, 64, 64)), (8, (128, 128, 128))]'
    - '[(8, (32, 32, 32)), (8, (64, 64, 64)), (8, (128, 128, 128))]'
    - '[(16, (64, 64, 64)), (16, (128, 128, 128)), (16, (256, 256, 256))]'
    - '[(16, (64, 64, 64)), (16, (128, 128, 128)), (16, (256, 256, 256))]'

  pnet_fc_params: 
    - '[(32, 0.1)]'
    - '[(128, 0.1), (128, 0.1)]'
    - '[(128, 0.1), (128, 0.1)]'
    - '[(256, 0.1), (256, 0.1)]'
    - '[(256, 0.1), (256, 0.1)]'

  freeze_pnet:
    - 'True'
    - 'False'
    - 'False'
    - 'False'
    - 'False'

  globals_fc_params:
    - '[(300, 0.1), (200, 0.1), (100, 0.1)]'
    - '[]'
    - '[(200, 0.1), (200, 0.1)]'
    - '[]'
    - '[(200, 0.1), (200, 0.1)]'

  joined_fc_params:
    - '[(50, 0.1)]'
    - '[(64, 0.1), (64, 0.1)]'
    - '[(128, 0.1), (128, 0.1)]'
    - '[(128, 0.1), (128, 0.1)]'
    - '[(256, 0.1), (256, 0.1)]'

