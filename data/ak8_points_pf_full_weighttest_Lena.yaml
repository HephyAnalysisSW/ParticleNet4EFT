selection:
   ### use `&`, `|`, `~` for logical operations on numpy arrays
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
   #(genJet_pt>300) & (genJet_pt<2500) & (genJet_nConstituents>0) 
   #(genJet_pt>500) & (genJet_SDmass>0) & (np.abs(dR_genJet_maxq1q2b)<0.6) & (genJet_SDsubjet1_mass>=0)
   (l1_pt>20) & (l2_pt>20) & (np.abs(l1_eta)<2.4) & (np.abs(l2_eta)<2.4) & (nrecoJet>3) & (met_pt>30) & (bjet0_pt>30) & (bjet1_pt>30) #(nBTag>1)
   
test_time_selection:
   ### selection to apply at test time (i.e., when running w/ --predict)
   #(genJet_pt>300) & (genJet_pt<2500) & (genJet_nConstituents>0)
   #(genJet_pt>500) & (genJet_SDmass>0) & (np.abs(dR_genJet_maxq1q2b)<0.6) & (genJet_SDsubjet1_mass>=0)

new_variables:
   ### [format] name: formula
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
   #eflow_const_mask: awkward.JaggedArray.ones_like(eflow_etarel)

preprocess:
  ### method: [manual, auto] - whether to use manually specified parameters for variable standardization
  ### [note]: `[var]_mask` will not be transformed even if `method=auto`
  method: manual
  ### data_fraction: fraction of events to use when calculating the mean/scale for the standardization
  data_fraction: 

inputs:
   global_features:
      length: 1
      vars:
         - nrecoJet  
         - mT_l1     
         - mT_l2     
         - ml_12     
         - l1_pt     
         - l1_eta    
         - l2_pt     
         - l2_eta 
         - met_pt
         - mj_12     
         - mlj_11    
         - mlj_12    
         - dPhil_12  
         - dPhij_12  
         - dEtal_12  
         - dEtaj_12  
         - ht        
         - htb       
         - ht_ratio  
         - jet0_pt   
         - jet0_eta  
         - jet1_pt   
         - jet1_eta  
         - jet2_pt   
         - jet2_eta  
         - jet3_pt   
         - jet4_pt   
         - jet5_pt   
         - jet6_pt   
         - jet7_pt   
         - bjet0_pt  
         - bjet1_pt  
         - m_4b      
         - dR_min0   
         - dR_min1   
         - min_dR_bb 
         - dR_2l     
         - mt2ll     
         - mt2bb     
         - mt2blbl   
         
   constituents_points:
      length: 10
      vars: 
         - recoJet_eta
         - recoJet_phi
   eflow_features:
      length: 10
      vars: 
         - recoJet_pt
         - recoJet_eta
         - recoJet_phi
         - recoJet_bTag
   eflow_mask:
      length: 10
      vars: 
         - recoJet_pt

labels:
   ### type can be `simple`, `custom`
   ### [option 1] use `simple` for binary/multi-class classification, then `value` is a list of 0-1 labels
   ### [option 2] otherwise use `custom` to define the label, then `value` is a map
   # type: custom
   # value: 
      # target_mass: np.where(fj_isQCD, fj_genjet_sdmass, fj_eflow_mass) 
   type: custom
   value:
        ctt_coeffs : ctt_coeff

observers:


